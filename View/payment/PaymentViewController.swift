//
//  PaymentViewController.swift
//  showapp
//
//  Created by rami on 12/12/2021.
//

import UIKit
import PayPalCheckout
class PaymentViewController: UIViewController {

  
    override func viewDidLoad() {
            super.viewDidLoad()

            let paymentButton = PayPalButton()
            view.addSubview(paymentButton)

            NSLayoutConstraint.activate(
                [
                    paymentButton.centerYAnchor.constraint(equalTo: view.centerYAnchor),
                    paymentButton.centerXAnchor.constraint(equalTo: view.centerXAnchor)
                ]
            )
            configurePayPalCheckout()
        }

        func configurePayPalCheckout() {
            Checkout.setCreateOrderCallback { createOrderAction in
                let amount = PurchaseUnit.Amount(currencyCode: .usd, value: "10.00")
                let purchaseUnit = PurchaseUnit(amount: amount)
                let order = OrderRequest(intent: .capture, purchaseUnits: [purchaseUnit])

                createOrderAction.create(order: order)
            }

            Checkout.setOnApproveCallback { approval in
                 approval.actions.capture { (response, error) in
                    print("Order successfully captured: \(response?.data)")
                }
            }
            Checkout.setOnCancelCallback {
                // User has cancelled the payment experience
                print("User has cancelled the payment experience")
            }
            Checkout.setOnErrorCallback { error in
                // Handle the error generated by the SDK
                print("Handle the error generated by the SDK")
            }
        }
    }

/*class CheckoutView: UIView, PaymentButtonDelegate {

    var payPalButton = PayPalButton()

    func configurePayPalButton() {
        payPalButton.delegate = self
    }

    func onButtonStart(_ button: PaymentButton) {
        // Invoked when the button is tapped, before the checkout process begins.
    }

    func onButtonFinish(_ button: PaymentButton) {
        // Invoked when the checkout process has finished
    }

    func button(_ button: PaymentButton, changedEligibilityStatus status: PaymentButtonEligibilityStatus) {
        // Invoked when the eligibility status of the button has changed
    }
}*/
